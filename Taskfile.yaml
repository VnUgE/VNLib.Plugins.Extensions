# https://taskfile.dev

#Called by the vnbuild system to produce builds for my website
#https://www.vaughnnugent.com/resources/software

#This taskfile is called from the root of a project that is being built
#and the purpose of this taskfile is to package up the output of a build 
#from the solution file, and package it up into a tgz files for distribution

version: '3'

vars:
  TARGET_FRAMEWORK: '{{ .TARGET_FRAMEWORK | default "net8.0" }}'
  BINARY_DIR: '{{ .BINARY_DIR | default "bin" }}'
  RELEASE_DIR: "{{ .BINARY_DIR }}/release/{{ .TARGET_FRAMEWORK }}/publish"

tasks:
  
  default:
    desc: 'Builds a single managed library when run from a project root'
    dir: '{{ .USER_WORKING_DIR }}'
    vars:
      CONFIGURATION: '{{ .CONFIGURATION | default "release" }}'
    cmds:
      - cmd: dotnet build -c {{ .CONFIGURATION }} {{ .CLI_ARGS }}

  #when build succeeds, archive the output into a tgz 
  postbuild_success:
    dir: '{{ .USER_WORKING_DIR }}'
    cmds:
     #pack up source code
     - task: packsource

     #run post in debug mode
     - task: postbuild
       vars: { BUILD_MODE: debug }

     #remove uncessary files from the release dir
     - cmd: powershell -Command "Get-ChildItem -Recurse '{{ .RELEASE_DIR }}/' -Include *.pdb,*.xml | Remove-Item"

     #run post in release mode
     - task: postbuild
       vars: { BUILD_MODE: release }


  postbuild_failed:
    dir: '{{.USER_WORKING_DIR}}'
    cmds: []


  postbuild:
    dir: '{{ .USER_WORKING_DIR }}'
    internal: true
    vars:
      #the build output directory
      BUILD_OUT: "{{ .BINARY_DIR }}/{{ .BUILD_MODE }}/{{ .TARGET_FRAMEWORK }}/publish" 

    cmds:
     #copy license and readme to target
     - cmd: powershell cp '../build.readme.md' '{{ .BUILD_OUT }}/readme.md'

     #tar outputs
     - cmd: cd "{{ .BUILD_OUT }}" && tar -czf "{{ .USER_WORKING_DIR }}/{{ .BINARY_DIR }}/{{ .BUILD_MODE }}.tgz" .
 
  packsource:
    dir: '{{ .USER_WORKING_DIR }}'
    internal: true
    vars:
      EXCLUDES:
        --exclude="bin"
        --exclude="obj"
    cmds:
    #copy source code to target
    - cmd: tar {{ .EXCLUDES }} -czf '{{ .BINARY_DIR }}/src.tgz' .

#Remove the output dirs on clean
  clean:
    dir: '{{ .USER_WORKING_DIR }}'
    ignore_error: true
    cmds:
     - for: ['bin/', 'obj/']
       cmd: powershell rm -Recurse '{{ .ITEM }}'
